{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/zelin/project/adminx/src/lib/posts.ts"],"sourcesContent":["'use server';\nimport fs from 'fs/promises';\nimport path from 'path';\n\nexport interface Story {\n  title: string;\n  content: string;\n  date: string;\n  topic: string;\n}\n\nexport async function getMarkdownFiles(): Promise<Story[]> {\n  const postsDirectory = path.join(process.cwd(), 'src/app/blog/stories');\n  const fileNames = await fs.readdir(postsDirectory);\n\n  const allPostsData: Story[] = await Promise.all(\n    fileNames.map(async (fileName) => {\n      const fullPath = path.join(postsDirectory, fileName);\n      const fileContents = await fs.readFile(fullPath, 'utf8');\n\n      const lines = fileContents.split('\\n');\n      const date = lines[0] || '';\n      const topic = lines[1] || '';\n      const content = lines.slice(2).join('\\n');\n\n      return {\n        title: fileName.replace(/\\.md$/, '').replaceAll('_', ' '),\n        content,\n        date,\n        topic,\n      };\n    })\n  );\n\n  allPostsData.sort((a, b) => {\n    const toDate = (d: string) => new Date(+d.slice(0,4), +d.slice(4,6)-1, +d.slice(6,8));\n    return toDate(b.date).getTime() - toDate(a.date).getTime();\n  });\n\n  return allPostsData;\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;;;;;;AASO,eAAe;IACpB,MAAM,iBAAiB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;IAChD,MAAM,YAAY,MAAM,qHAAA,CAAA,UAAE,CAAC,OAAO,CAAC;IAEnC,MAAM,eAAwB,MAAM,QAAQ,GAAG,CAC7C,UAAU,GAAG,CAAC,OAAO;QACnB,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,gBAAgB;QAC3C,MAAM,eAAe,MAAM,qHAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,UAAU;QAEjD,MAAM,QAAQ,aAAa,KAAK,CAAC;QACjC,MAAM,OAAO,KAAK,CAAC,EAAE,IAAI;QACzB,MAAM,QAAQ,KAAK,CAAC,EAAE,IAAI;QAC1B,MAAM,UAAU,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC;QAEpC,OAAO;YACL,OAAO,SAAS,OAAO,CAAC,SAAS,IAAI,UAAU,CAAC,KAAK;YACrD;YACA;YACA;QACF;IACF;IAGF,aAAa,IAAI,CAAC,CAAC,GAAG;QACpB,MAAM,SAAS,CAAC,IAAc,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC,GAAE,IAAI,CAAC,EAAE,KAAK,CAAC,GAAE,KAAG,GAAG,CAAC,EAAE,KAAK,CAAC,GAAE;QAClF,OAAO,OAAO,EAAE,IAAI,EAAE,OAAO,KAAK,OAAO,EAAE,IAAI,EAAE,OAAO;IAC1D;IAEA,OAAO;AACT;;;IA7BsB;;AAAA,8WAAA","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/zelin/project/adminx/.next-internal/server/app/blog/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getMarkdownFiles as '0033469c7b9670a9bd476da892b23dfd066b6eef6f'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///Users/zelin/project/adminx/src/app/blog/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/blog/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/blog/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/zelin/project/adminx/src/app/blog/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/blog/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/blog/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqQ,GAClS,mCACA","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}